#!/bin/sh

# Count lines of code in ttauto as a function of revision, for funsies.
#
# Run from the root ttauto folder as devel/linecount.
#
# Plot results in Matlab with linecount_plot.m
#
# To avoid putting the repo in a funny state, clone a fresh local copy
# first in tmp.  Delete when done.

ROOTDIR=`pwd`
DEVELDIR=$ROOTDIR/devel
LINECOUNTFILE=$DEVELDIR/linecount.dat
BRANCH=master
#REVSTEP=1

REVLIST=`git rev-list --reverse $BRANCH`

rm -f $LINECOUNTFILE

cd /tmp
rm -rf ttauto-tmp
git clone $ROOTDIR ttauto-tmp
cd ttauto-tmp

for i in $REVLIST; do
    git checkout $i
    CODEFOLDERS=""
    if [ -e 'examples' ]; then
	CODEFOLDERS="$CODEFOLDERS examples"
    fi
    if [ -e 'include' ]; then
	CODEFOLDERS="$CODEFOLDERS include"
    fi
    if [ -e 'lib' ]; then
	CODEFOLDERS="$CODEFOLDERS lib"
    fi
    if [ -e 'tests' ]; then
	CODEFOLDERS="$CODEFOLDERS tests"
    fi
    if [ -e 'ttauto' ]; then
	CODEFOLDERS="$CODEFOLDERS ttauto"
    fi
    LINES=`find $CODEFOLDERS \
	-name '*.[cm]' -o -name '*.?pp' -o -name '*.tex' -o -name '*.bib' \
	| xargs wc -l | tail -1 | sed 's/ total$//g'`
    # The date is in UTC seconds.
    DATE=`git log -1 --format=%ct $i`
    SHORTHASH=`git log -1 --format=%h $i`
    echo $SHORTHASH '\t' $DATE '\t' $LINES >> $LINECOUNTFILE
done

cd /tmp
rm -rf ttauto-tmp
